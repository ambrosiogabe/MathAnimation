{
    "information_for_contributors": [
        "This file is a custom grammar for luau created for the main project in this repository.",
        "It uses the base syntax of Lua 5.1, defined here: https://www.lua.org/manual/5.1/manual.html#2",
        "and it uses any additional syntax defined here: https://luau-lang.org/syntax"
    ],
    "version": "https://github.com/ambrosiogabe/MathAnimation/tree/master/assets/customGrammars/luau.grammar.json",
    "name": "Luau",
    "scopeName": "source.luau",
    "comment": "Luau Syntax: version 0.1",
    "patterns": [
        {
            "include": "#function_definitions"
        },
        {
            "include": "#function_calls"
        },
        {
            "include": "#stringLiterals"
        },
        {
            "include": "#numberLiterals"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#table_constructor"
        },
        {
            "include": "#block"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#binaryOp"
        },
        {
            "include": "#unaryOp"
        }
    ],
    "repository": {
        "simple_expression": {
            "patterns": [
                {
                    "include": "#table_constructor"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#numberLiterals"
                },
                {
                    "include": "#stringLiterals"
                },
                {
                    "include": "#function_calls"
                },
                {
                    "include": "#binaryOp"
                },
                {
                    "include": "#unaryOp"
                }
            ]
        },
        "table_constructor": {
            "begin": "{",
            "end": "}",
            "name": "meta.object-literal.luau",
            "patterns": [
                {
                    "match": "=",
                    "name": "keyword.operator.luau"
                },
                {
                    "match": "\\[",
                    "name": "meta.bracket.square.open.luau"
                },
                {
                    "match": "\\]",
                    "name": "meta.bracket.square.close.luau"
                },
                {
                    "match": ",",
                    "name": "punctation.separator.luau"
                },
                {
                    "include": "#simple_expression"
                },
                {
                    "match": "[a-zA-Z_$][\\w$]*",
                    "name": "variable.other.luau"
                }
            ]
        },
        "function_definitions": {
            "patterns": [
                {
                    "begin": "(?=\\blocal\\b\\s*function\\b\\s*)",
                    "end": "(?<=\\bend\\b)",
                    "patterns": [
                        {
                            "include": "#function_body"
                        },
                        {
                            "begin": "\\G",
                            "end": "(?<=\\))",
                            "name": "meta.function.local.luau",
                            "patterns": [
                                {
                                    "include": "#local_function_innards"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?=\\bfunction\\b\\s*)",
                    "end": "(?<=\\bend\\b)",
                    "patterns": [
                        {
                            "include": "#function_body"
                        },
                        {
                            "begin": "\\G",
                            "end": "(?<=\\))",
                            "name": "meta.function.luau",
                            "patterns": [
                                {
                                    "include": "#function_innards"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "function_calls": {
            "patterns": [
                {
					"begin": "([\\w$]+)\\s*(?=\")",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "\\b(dofile|require|dostring|next|nextvar|tostring|print|tonumber|type|assert|error|(set|get)global|setfallback)\\b",
									"name": "support.function.luau"
								},
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=\")|$",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"include": "#doubleQuotedStringLiterals"
						}
					]
				},
                {
					"begin": "([\\w$]+)\\s*(?=')",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "\\b(dofile|require|dostring|next|nextvar|tostring|print|tonumber|type|assert|error|(set|get)global|setfallback)\\b",
									"name": "support.function.luau"
								},
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=')|$",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"include": "#singleQuotedStringLiterals"
						}
					]
				},
				{
					"begin": "([\\w$]+)\\s*(?=\\()",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "\\b(dofile|require|dostring|next|nextvar|tostring|print|tonumber|type|assert|error|(set|get)global|setfallback)\\b",
									"name": "support.function.luau"
								},
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=\\))",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"include": "#arguments"
						}
					]
				},
                {
					"begin": "([\\w$]+)\\s*(?=\\[\\[)",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "\\b(dofile|require|dostring|next|nextvar|tostring|print|tonumber|type|assert|error|(set|get)global|setfallback)\\b",
									"name": "support.function.luau"
								},
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=\\]\\])",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"begin": "\\[\\[",
                            "end": "\\]\\]",
                            "name": "string.quoted.other.raw.luau"
						}
					]
				},


                {
					"begin": "[\\.\\:]([\\w$]+)\\s*(?=\")",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=\")|$",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"include": "#doubleQuotedStringLiterals"
						}
					]
				},
                {
					"begin": "[\\.\\:]([\\w$]+)\\s*(?=')",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=')|$",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"include": "#singleQuotedStringLiterals"
						}
					]
				},
				{
					"begin": "[\\.\\:]([\\w$]+)\\s*(?=\\()",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=\\))",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"include": "#arguments"
						}
					]
				},
                {
					"begin": "[\\.\\:]([\\w$]+)\\s*(?=\\[\\[)",
					"beginCaptures": {
						"1": {
							"patterns": [
								{
									"match": "[a-zA-Z_$][\\w$]*",
									"name": "entity.name.function.luau"
								},
								{
									"match": "\\d[\\w$]*",
									"name": "invalid.illegal.identifier.luau"
								}
							]
						}
					},
					"end": "(?<=\\]\\])",
					"name": "meta.function-call.luau",
					"patterns": [
						{
							"begin": "\\[\\[",
                            "end": "\\]\\]",
                            "name": "string.quoted.other.raw.luau"
						}
					]
				}
			]
        },
        "arguments": {
			"patterns": [
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.begin.bracket.round.luau"
						}
					},
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.arguments.end.bracket.round.luau"
						}
					},
					"name": "meta.arguments.luau",
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			]
        },
        "function_body": {
			"patterns": [
				{
                    "name": "meta.function.body.luau",
					"begin": "(?<=\\))",
					"end": "\\bend\\b",
					"endCaptures": {
						"0": {
							"name": "keyword.control.luau"
						}
					},
					"patterns": [
						{
							"include": "$self"
						}
					]
				}
			]
		},
        "local_function_innards": {
            "patterns": [
                {
                    "match": "\\b(local)\\b\\s*",
                    "name": "keyword.control.luau"
                },
                {
                    "match": "\\b(function)\\b\\s*",
                    "name": "keyword.control.luau"
                },
                {
					"match": "[a-zA-Z_$][\\w$]*(?=\\s*\\()",
					"name": "entity.name.function.luau" 
				},
                {
					"include": "#function_params"
				},
                {
                    "include": "#comments"
                }
            ]
        },
        "function_innards": {
            "patterns": [
                {
                    "match": "\\b(function)\\b\\s*",
                    "name": "keyword.control.luau"
                },
                {
					"match": "[a-zA-Z_$][\\w$]*(?=\\s*\\()",
					"name": "entity.name.function.luau" 
				},
                {
                    "begin": "\\b([a-zA-Z_$][\\w$]*)\\b",
                    "end": "(?=\\s*\\()",
                    "patterns": [
                        {
                            "match": "(\\.)([a-zA-Z_$][\\w$]*)(?=\\s*\\()",
                            "captures": {
                                "1": {
                                    "name": "punctuation.accessor.luau"
                                },
                                "2": {
                                    "name": "entity.name.function.luau"
                                }
                            }
                        },
                        {
                            "match": "(\\.)([a-zA-Z_$][\\w$]*)",
                            "captures": {
                                "1": {
                                    "name": "punctuation.accessor.luau"
                                },
                                "2": {
                                    "name": "variable.other.object.property.luau"
                                }
                            }
                        },
                        {
                            "match": "(\\:)([a-zA-Z_$][\\w$]*)(?=\\s*\\()",
                            "captures": {
                                "1": {
                                    "name": "punctuation.accessor.luau"
                                },
                                "2": {
                                    "name": "entity.name.function.luau"
                                }
                            }
                        }
                    ]
				},
                {
					"include": "#function_params"
				},
                {
                    "include": "#comments"
                }
            ]
        },
        "function_params": {
            "begin": "\\(",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.parameters.begin.bracket.round.luau"
                }
            },
            "end": "\\)",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.parameters.end.bracket.round.luau"
                }
            },
            "name": "meta.parameters.luau",
            "patterns": [
                {
                    "match": "[a-zA-Z_$][\\w$]*(,?)",
                    "name": "variable.parameter.function.luau",
                    "captures": {
                        "1": {
                            "name": "punctuation.separator.parameter.luau"
                        }
                    }
                },
                {
                    "match": "(\\.\\.\\.)\\s*\\)",
                    "captures": {
                        "1": {
                            "name": "variable.parameter.variadic.function.luau"
                        }
                    }
                }
            ]
        },
        "block": {
            "name": "meta.block.luau",
            "begin": "\\bdo\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.luau"
                }
            },
            "end": "end",
            "endCaptures": {
                "0": {
                    "name": "keyword.control.luau"
                }
            },
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "numberLiterals": {
            "patterns": [
                {
                    "include": "#floatingPointLiteral"
                },
                {
                    "include": "#integerLiteral"
                },
                {
                    "include": "#hexLiteral"
                }
            ]
        },
        "integerLiteral": {
            "match": "\\b[0-9]+\\b",
            "name": "constant.numeric.decimal.luau"
        },
        "floatingPointLiteral": {
            "match": "\\b[0-9]+(\\.)[0-9]+([eE](\\-)?[0-9]+)?\\b",
            "name": "constant.numeric.decimal.luau",
            "captures": {
                "1": {
                    "name": "meta.delimiter.decimal.period.luau"
                }
            }
        },
        "hexLiteral": {
            "match": "\\b0x[0-9a-fA-F]+\\b",
            "name": "constant.numeric.hexadecimal.luau"
        },
        "stringLiterals": {
            "patterns": [
                {
                    "include": "#singleQuotedStringLiterals"
                },
                {
                    "include": "#doubleQuotedStringLiterals"
                },
                {
                    "include": "#rawStringLiterals"
                }
            ]
        },
        "singleQuotedStringLiterals": {
            "name": "string.quoted.single.luau",
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.luau"
                }
            },
            "end": "'|$",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.luau"
                }
            },
            "patterns": [
                {
                    "include": "#escapedCharacters"
                }
            ]
        },
        "doubleQuotedStringLiterals": {
            "name": "string.quoted.double.luau",
            "begin": "\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.luau"
                }
            },
            "end": "\"|$",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.luau"
                }
            },
            "patterns": [
                {
                    "include": "#escapedCharacters"
                }
            ]
        },
        "rawStringLiterals": {
            "name": "string.quoted.other.raw.luau",
            "begin": "\\[(=*)\\[",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.luau"
                }
            },
            "end": "\\]\\1\\]",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.luau"
                }
            }
        },
        "escapedCharacters": {
            "patterns": [
                {
                    "name": "constant.character.escape.luau",
                    "match": "\\\\[0-9]{1,3}"
                },
                {
                    "name": "constant.character.escape.luau",
                    "match": "\\\\['\"abfnrtv\\'0]"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.block.double-dash.luau",
                    "begin": "--\\[(=*)\\[",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.luau"
                        }
                    },
                    "end": "\\]\\1\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.luau"
                        }
                    }
                },
                {
                    "name": "comment.line.double-dash.luau",
                    "begin": "--",
                    "end": "$"
                }
            ]
        },
        "identifier": {
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
            "name": "variable.other.luau"
        },
        "keywords": {
            "match": "\\b(and|break|do|else|elseif|end|for|function|if|in|local|not|or|repeat|return|then|until|while)\\b",
            "name": "keyword.control.luau"
        },
        "constants": {
            "match": "\\b(false|nil|true)\\b",
            "name": "constant.language.luau"
        },
        "binaryOp": {
            "match": "\\+|-|\\*|/|\\^|%|\\.\\.|<|<=|>|>=|==|~=",
            "name": "keyword.operator.luau"
        },
        "unaryOp": {
            "match": "-|\\bnot\\b|#|\\.\\.\\.",
            "name": "keyword.operator.luau"
        }
    }
}