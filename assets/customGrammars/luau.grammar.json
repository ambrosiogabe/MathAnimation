{
    "information_for_contributors": ["This file is a custom grammar for luau created for the main project in this repository"],
    "version": "https://github.com/ambrosiogabe/MathAnimation/tree/master/assets/customGrammars/luau.grammar.json",
    "name": "Lua",
    "scopeName": "source.lua",
    "comment": "Lua Syntax: version 0.8",
    "patterns": [
    ],
    "repository": {
        "escaped_char": {
            "patterns": [
                {
                    "match": "\\\\[abfnrtv\\\\\"'\\n]",
                    "name": "constant.character.escape.lua"
                },
                {
                    "match": "\\\\z[\\n\\t ]*",
                    "name": "constant.character.escape.lua"
                },
                {
                    "match": "\\\\\\d{1,3}",
                    "name": "constant.character.escape.byte.lua"
                },
                {
                    "match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
                    "name": "constant.character.escape.byte.lua"
                },
                {
                    "match": "\\\\u\\{[0-9A-Fa-f]+\\}",
                    "name": "constant.character.escape.unicode.lua"
                },
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal.character.escape.lua"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "begin": "'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.lua"
                        }
                    },
                    "end": "'[ \\t]*|(?=\\n)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.lua"
                        }
                    },
                    "name": "string.quoted.single.lua",
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.lua"
                        }
                    },
                    "end": "\"[ \\t]*|(?=\\n)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.lua"
                        }
                    },
                    "name": "string.quoted.double.lua",
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "begin": "`",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.lua"
                        }
                    },
                    "end": "`[ \\t]*|(?=\\n)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.lua"
                        }
                    },
                    "name": "string.quoted.double.lua"
                },
                {
                    "begin": "(?<=\\.cdef)\\s*(\\[(=*)\\[)",
                    "beginCaptures": {
                        "0": {
                            "name": "string.quoted.other.multiline.lua"
                        },
                        "1": {
                            "name": "punctuation.definition.string.begin.lua"
                        }
                    },
                    "contentName": "meta.embedded.lua",
                    "end": "(\\]\\2\\])[ \\t]*",
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.other.multiline.lua"
                        },
                        "1": {
                            "name": "punctuation.definition.string.end.lua"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.c"
                        }
                    ]
                },
                {
                    "begin": "(?<!--)\\[(=*)\\[",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.lua"
                        }
                    },
                    "end": "\\]\\1\\][ \\t]*",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.lua"
                        }
                    },
                    "name": "string.quoted.other.multiline.lua"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "begin": "(--[- ]*)(todo|TODO)(\\b)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.lua"
                        },
                        "2": {
                            "name": "keyword.other.important.todo.lua"
                        }
                    },
                    "end": "\\n",
                    "name": "comment.line.double-dash.lua"
                },
                {
                    "begin": "(^[ \\t]+)?(?=--)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.lua"
                        }
                    },
                    "end": "(?!\\G)((?!^)[ \\t]+\\n)?",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.trailing.lua"
                        }
                    },
                    "patterns": [
                        {
                            "begin": "--\\[(=*)\\[",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.begin.lua"
                                }
                            },
                            "end": "\\]\\1\\]",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.end.lua"
                                }
                            },
                            "name": "comment.block.lua"
                        },
                        {
                            "begin": "----",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.lua"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.double-dash.lua"
                        },
                        {
                            "begin": "---?",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.lua"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.double-dash.lua",
                            "patterns": [
                                {
                                    "include": "#luadoc"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "\\/\\*",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.lua"
                        }
                    },
                    "end": "\\*\\/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.lua"
                        }
                    },
                    "name": "comment.block.lua"
                }
            ]
        },
        "luadoc": {
            "patterns": [
                {
                    "begin": "(?<=---\\s*)@class\\s*\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        },
                        "1": {
                            "name": "support.class.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b(\\s*:\\s*)\\b([a-zA-Z_][a-zA-Z0-9_\\.]*)((\\s*,\\s*)\\b\\s*([a-zA-Z_][a-zA-Z0-9_\\.]*))*",
                            "end": "(?=\\n)",
                            "beginCaptures": [
                                {
                                    "patterns": [
                                        {
                                            "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                                            "name": "support.class.lua"
                                        },
                                        {
                                            "match": ":|,",
                                            "name": "keyword.operator.lua"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@type",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "include": "#luadoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@alias",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                            "beginCaptures": {
                                "0": {
                                    "name": "variable.lua"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@param",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(\\??)",
                            "beginCaptures": {
                                "1": {
                                    "name": "entity.name.variable.lua"
                                },
                                "2": {
                                    "name": "keyword.operator.lua"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@return",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "match": "\\?",
                            "name": "keyword.operator.lua"
                        },
                        {
                            "include": "#luadoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@field",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                            "beginCaptures": {
                                "0": {
                                    "name": "entity.name.variable.lua"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@generic",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                            "beginCaptures": {
                                "0": {
                                    "name": "storage.type.generic.lua"
                                }
                            },
                            "end": "(?=\\n)|(,)",
                            "endCaptures": {
                                "0": {
                                    "name": "keyword.operator.lua"
                                }
                            },
                            "patterns": [
                                {
                                    "match": ":",
                                    "name": "keyword.operator.lua"
                                },
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@vararg",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "include": "#luadoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@overload",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "include": "#luadoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@deprecated",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)"
                },
                {
                    "begin": "(?<=---\\s*)@meta",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)"
                },
                {
                    "begin": "(?<=---\\s*)@version",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "match": "\\b(5\\.1|5\\.2|5\\.3|5\\.4|JIT)\\b",
                            "name": "support.class.lua"
                        },
                        {
                            "match": ",|\\>|\\<",
                            "name": "keyword.operator.lua"
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@see",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                            "name": "support.class.lua"
                        },
                        {
                            "match": "#",
                            "name": "keyword.operator.lua"
                        }
                    ]
                },
                {
                    "begin": "(?<=---\\s*)@diagnostic",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "([a-zA-Z_\\-0-9]+)[ \\t]*(:)?",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.other.unit"
                                },
                                "2": {
                                    "name": "keyword.operator.unit"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\-]*)",
                                    "name": "support.class.lua"
                                },
                                {
                                    "match": ",",
                                    "name": "keyword.operator.lua"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---)\\|\\s*[\\>\\+]?",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=[\\n#])",
                    "patterns": [
                        {
                            "include": "#string"
                        }
                    ]
                }
            ]
        },
        "luadoc.type": {
            "patterns": [
                {
                    "begin": "\\bfun\\b",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.lua"
                        }
                    },
                    "end": "(?=\\s)",
                    "patterns": [
                        {
                            "begin": "@",
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "name": "constant.language.lua"
                                }
                            ]
                        },
                        {
                            "match": "[\\(\\),:\\?][ \\t]*",
                            "name": "keyword.operator.lua"
                        },
                        {
                            "match": "(([a-zA-Z_][a-zA-Z0-9_\\.\\*\\[\\]\\<\\>\\,]*))(?<!,)[ \\t]*(?=\\??:)",
                            "name": "entity.name.variable.lua"
                        },
                        {
                            "include": "#luadoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?=[a-zA-Z_\\.\\*\"'])",
                    "end": "(?=[\\s\\),\\?])",
                    "patterns": [
                        {
                            "begin": "@",
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "name": "constant.language.lua"
                                }
                            ]
                        },
                        {
                            "match": "(any|nil|boolean|number|string|thread)(?<!,)[ \\t]*",
                            "name": "support.type.lua"
                        },
                        {
                            "match": "(([a-zA-Z_][a-zA-Z0-9_\\.\\*\\[\\]\\<\\>\\,]*))(?<!,)[ \\t]*",
                            "name": "entity.name.type.lua"
                        },
                        {
                            "match": "(\\.\\.\\.)[ \\t]*",
                            "name": "constant.language.lua"
                        },
                        {
                            "include": "#string"
                        },
                        {
                            "include": "#luadoc.type.resume"
                        }
                    ]
                }
            ]
        },
        "luadoc.type.resume": {
            "begin": "\\|[ \\t]*",
            "beginCaptures": {
                "0": {
                    "name": "keyword.operator.lua"
                }
            },
            "end": "(?=[\\s\\),\\?])",
            "patterns": [
                {
                    "begin": "@",
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "name": "constant.language.lua"
                        }
                    ]
                },
                {
                    "match": "(any|nil|boolean|number|string|thread)(?<!,)[ \\t]*",
                    "name": "support.type.lua"
                },
                {
                    "match": "(([a-zA-Z_][a-zA-Z0-9_\\.\\*\\[\\]\\<\\>\\,]*))(?<!,)[ \\t]*",
                    "name": "entity.name.type.lua"
                },
                {
                    "match": "(\\.\\.\\.)[ \\t]*",
                    "name": "constant.language.lua"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#luadoc.type.resume"
                }
            ]
        },
        "extraLuaDoc": {
            "patterns": [
                {
                    "begin": "^@class\\s*\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        },
                        "1": {
                            "name": "support.class.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b(\\s*:\\s*)\\b([a-zA-Z_][a-zA-Z0-9_\\.]*)((\\s*,\\s*)\\b\\s*([a-zA-Z_][a-zA-Z0-9_\\.]*))*",
                            "end": "(?=\\n)",
                            "beginCaptures": [
                                {
                                    "patterns": [
                                        {
                                            "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                                            "name": "support.class.lua"
                                        },
                                        {
                                            "match": ":|,",
                                            "name": "keyword.operator.lua"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "^@type",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "include": "#luadoc.type"
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@field",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                            "beginCaptures": {
                                "0": {
                                    "name": "entity.name.variable.lua"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@alias",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                            "beginCaptures": {
                                "0": {
                                    "name": "variable.lua"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "^@param",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(\\??)",
                            "beginCaptures": {
                                "1": {
                                    "name": "entity.name.variable.lua"
                                },
                                "2": {
                                    "name": "keyword.operator.lua"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@generic",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                            "beginCaptures": {
                                "0": {
                                    "name": "storage.type.generic.lua"
                                }
                            },
                            "end": "(?=\\n)|(,)",
                            "endCaptures": {
                                "0": {
                                    "name": "keyword.operator.lua"
                                }
                            },
                            "patterns": [
                                {
                                    "match": ":",
                                    "name": "keyword.operator.lua"
                                },
                                {
                                    "include": "#luadoc.type"
                                }
                            ]
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@return",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "match": "\\?",
                            "name": "keyword.operator.lua"
                        },
                        {
                            "include": "#luadoc.type"
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@vararg",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "include": "#luadoc.type"
                        }
                    ]
                },
                {
                    "begin": "^@overload",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "include": "#luadoc.type"
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@meta",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@version",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "match": "\\b(5\\.1|5\\.2|5\\.3|5\\.4|JIT)\\b",
                            "name": "support.class.lua"
                        },
                        {
                            "match": ",|\\>|\\<",
                            "name": "keyword.operator.lua"
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@see",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*]*)",
                            "name": "support.class.lua"
                        },
                        {
                            "match": "#",
                            "name": "keyword.operator.lua"
                        }
                    ],
                    "name": "comment.block.lua"
                },
                {
                    "begin": "^@diagnostic",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.lua"
                        }
                    },
                    "end": "(?=\\n)",
                    "patterns": [
                        {
                            "begin": "([a-zA-Z_\\-0-9]+)[ \\t]*(:)?",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.other.unit"
                                },
                                "2": {
                                    "name": "keyword.operator.unit"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\-]*)",
                                    "name": "support.class.lua"
                                },
                                {
                                    "match": ",",
                                    "name": "keyword.operator.lua"
                                }
                            ]
                        }
                    ],
                    "name": "comment.block.lua"
                }
            ]
        }
    }
}